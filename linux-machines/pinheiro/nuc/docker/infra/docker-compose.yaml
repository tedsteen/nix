services:
  ddns-pinheiro:
    image: favonia/cloudflare-ddns
    user: "1000" # User ted has read access to the secret
    restart: always
    read_only: true
    cap_drop: [all]
    security_opt: [no-new-privileges:true]
    environment:
      - TZ=Europe/Lisbon
      - CLOUDFLARE_API_TOKEN_FILE=/run/secrets/cloudflare_s3n_io_ddns_api_token
      - DOMAINS=ddns.pinheiro.s3n.io
      - PROXIED=true
      - IP6_PROVIDER=none
    secrets:
      - cloudflare_s3n_io_ddns_api_token

  ddns-pinheiro-nuc:
    image: favonia/cloudflare-ddns
    user: "1000" # User ted has read access to the secret
    restart: always
    read_only: true
    cap_drop: [all]
    security_opt: [no-new-privileges:true]
    network_mode: host
    environment:
      - TZ=Europe/Lisbon
      - CLOUDFLARE_API_TOKEN_FILE=/run/secrets/cloudflare_s3n_io_ddns_api_token
      - DOMAINS=nuc.pinheiro.s3n.io
      - IP6_PROVIDER=none
      - IP4_PROVIDER=local
    secrets:
      - cloudflare_s3n_io_ddns_api_token

  site-pinheiro:
    build: pinheiro
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pinheiro_site.rule=Host(`nuc.pinheiro.s3n.io`)'
      - 'traefik.http.routers.pinheiro_site.entrypoints=web_private'
      - 'traefik.docker.network=infra_traefik'
    networks:
      - traefik
  
  traefik:
    image: 'traefik:latest'
    restart: unless-stopped
    pull_policy: always
    command:
      #- "--log.level=DEBUG"
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'

      # Private entrypoint for internal services
      - '--entrypoints.web_private.address=:80'
      
      # Public entrypoint for secure (HTTPS) external access
      - "--entryPoints.web_public_secure.address=:443"
      - "--certificatesresolvers.defaultcertresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.defaultcertresolver.acme.email=ted.steen@gmail.com"
      - "--certificatesresolvers.defaultcertresolver.acme.storage=/letsencrypt/acme.json"

      # Public entrypoint for external access (only used for redirects)
      - '--entrypoints.web_public_do_not_use.address=:81'
      # Redirect all public HTTP traffic to HTTPS
      - "--entrypoints.web_public_do_not_use.http.redirections.entryPoint.to=web_public_secure"
      - "--entrypoints.web_public_do_not_use.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web_public_do_not_use.http.redirections.entrypoint.permanent=true"
    environment:
      TZ: Europe/Lisbon
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.infra_traefik.rule=Host(`traefik.pinheiro.s3n.io`)'
      - 'traefik.http.routers.infra_traefik.entrypoints=web_private'
      - 'traefik.http.services.infra_traefik.loadbalancer.server.port=8080'
      - 'traefik.docker.network=infra_traefik'
    ports:
      - '80:80'
      - '81:81'
      - "443:443"
    volumes:
      - traefik_letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  influxdb:
    image: influxdb:alpine
    restart: unless-stopped
    pull_policy: always
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 2s
      timeout: 10s
      retries: 10
    environment:
      TZ: Europe/Lisbon
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ted
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: MyInitialAdminToken0==
      DOCKER_INFLUXDB_INIT_ORG: pinheiro
      DOCKER_INFLUXDB_INIT_BUCKET: everything
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.infra_influxdb.rule=Host(`influxdb.pinheiro.s3n.io`)'
      - 'traefik.http.routers.infra_influxdb.entrypoints=web_private'
      - 'traefik.http.services.infra_influxdb.loadbalancer.server.port=8086'
      - 'traefik.docker.network=infra_traefik'
    networks:
      - metrics
      - traefik
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    pull_policy: always
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.infra_grafana.rule=Host(`grafana.pinheiro.s3n.io`)'
      - 'traefik.http.routers.infra_grafana.entrypoints=web_private'
      - 'traefik.http.services.infra_grafana.loadbalancer.server.port=3000'
      - 'traefik.docker.network=infra_traefik'
    networks:
      - metrics
      - traefik
    volumes:
      - grafana:/var/lib/grafana

  telegraf:
    build: ./telegraf
    restart: unless-stopped
    privileged: true
    hostname: "pinheiro-nuc"
    depends_on:
      influxdb:
        condition: service_healthy
    environment:
      TZ: Europe/Lisbon
      INFLUXDB_ADMIN_TOKEN: MyInitialAdminToken0==
      HOST_MOUNT_PREFIX: /hostfs
      HOST_ETC: /hostfs/etc
      HOST_PROC: /hostfs/proc
      HOST_SYS: /hostfs/sys
      HOST_VAR: /hostfs/var
      HOST_RUN: /hostfs/run
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /run/udev:/run/udev:ro
      - /:/hostfs:ro
    networks:
      - metrics
  
  samba:
    image: dperson/samba
    pull_policy: always
    command: -n -r -s "Everything;/mount;yes;no;yes;;;;"
    restart: unless-stopped
    ports:
      - "139:139"
      - "445:445"
    volumes:
      - /:/mount
    environment:
      GROUPID: 0
      USERID: 0
      TZ: Europe/Lisbon
    tmpfs:
      - /tmp

  wireguard:
    build: ./wireguard
    restart: unless-stopped
    healthcheck:
      test: curl https://am.i.mullvad.net/connected | grep -q "You are connected"
      interval: 5s
      start_period: 5s
      start_interval: 2s
      retries: 10
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    # environment:
    #   - PORTFORWARD_PORT=45000
    #   - PORTFORWARD_IPADDRESS=172.40.0.3
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ${INFRA_WIREGUARD_CONFIG}:/etc/wireguard/wg0.conf
    networks:
      wireguard:
        ipv4_address: 172.40.0.2

networks:
  traefik:
    driver: bridge
  metrics:
    driver: bridge
  wireguard:
    driver: bridge
    ipam:
      config:
      - subnet: 172.40.0.0/29

volumes:
  influxdb_data:
  influxdb_config:
  grafana:
  traefik_letsencrypt:

secrets:
  cloudflare_s3n_io_ddns_api_token:
    file: /run/secrets/cloudflare_s3n_io_ddns_api_token